import type { CryptoData, WeatherData } from "../types"

const WEATHER_URL = 'https://api.open-meteo.com/v1/forecast?latitude=55.7558&longitude=37.6173&current_weather=true&hourly=temperature_2m,relative_humidity_2m'
const CRYPTO_URL = 'https://api.coingecko.com/api/v3/simple/price?ids=bitcoin,ethereum,binancecoin&vs_currencies=usd&include_24hr_change=true'
const FACT_URL = 'https://uselessfacts.jsph.pl/random.json?language=ru'

export async function fetchWeather(): Promise<WeatherData | null> {
  try {
    const response = await fetch(WEATHER_URL)
    const data = await response.json()
    if (!data.current_weather) return null
    return {
      location: "–ú–æ—Å–∫–≤–∞",
      temp: Math.round(data.current_weather.temperature),
      description: getWeatherDescription(data.current_weather.weathercode),
      humidity: data.hourly?.relative_humidity_2m?.[0] ?? 0,
      icon: getWeatherIcon(data.current_weather.weathercode)
    }
  } catch {
    return null
  }
}

export async function fetchCrypto(): Promise<CryptoData[]> {
  try {
    const response = await fetch(CRYPTO_URL)
    const data = await response.json()
    return [
      { symbol: "BTC", price: data.bitcoin?.usd || 0, change: data.bitcoin?.usd_24h_change || 0 },
      { symbol: "ETH", price: data.ethereum?.usd || 0, change: data.ethereum?.usd_24h_change || 0 },
      { symbol: "BNB", price: data.binancecoin?.usd || 0, change: data.binancecoin?.usd_24h_change || 0 },
    ]
  } catch {
    return []
  }
}

export async function fetchRandomFact(): Promise<string> {
  try {
    const response = await fetch(FACT_URL)
    const data = await response.json()
    return data.text || "–ó–∞–≥—Ä—É–∂–∞–µ–º –∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã–π —Ñ–∞–∫—Ç..."
  } catch {
    return "üí° –ó–Ω–∞–ª–∏ –ª–∏ –≤—ã, —á—Ç–æ TypeScript –±—ã–ª —Å–æ–∑–¥–∞–Ω –≤ Microsoft –≤ 2012 –≥–æ–¥—É?"
  }
}

function getWeatherDescription(code: number): string {
  const codes: { [key: number]: string } = {
    0: "–Ø—Å–Ω–æ",
    1: "–ü—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–µ–Ω–Ω–æ —è—Å–Ω–æ",
    2: "–ü–µ—Ä–µ–º–µ–Ω–Ω–∞—è –æ–±–ª–∞—á–Ω–æ—Å—Ç—å",
    3: "–ü–∞—Å–º—É—Ä–Ω–æ",
    45: "–¢—É–º–∞–Ω",
    48: "–ò–∑–º–æ—Ä–æ–∑—å",
    51: "–õ—ë–≥–∫–∞—è –º–æ—Ä–æ—Å—å",
    53: "–£–º–µ—Ä–µ–Ω–Ω–∞—è –º–æ—Ä–æ—Å—å",
    55: "–ì—É—Å—Ç–∞—è –º–æ—Ä–æ—Å—å",
    61: "–õ—ë–≥–∫–∏–π –¥–æ–∂–¥—å",
    63: "–£–º–µ—Ä–µ–Ω–Ω—ã–π –¥–æ–∂–¥—å",
    65: "–°–∏–ª—å–Ω—ã–π –¥–æ–∂–¥—å",
    71: "–õ—ë–≥–∫–∏–π —Å–Ω–µ–≥",
    73: "–£–º–µ—Ä–µ–Ω–Ω—ã–π —Å–Ω–µ–≥",
    75: "–°–∏–ª—å–Ω—ã–π —Å–Ω–µ–≥",
    80: "–õ–∏–≤–Ω–∏",
    95: "–ì—Ä–æ–∑–∞"
  }
  return codes[code] || "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ"
}

function getWeatherIcon(code: number): string {
  if (code === 0) return "‚òÄÔ∏è"
  if (code <= 3) return "‚õÖ"
  if (code <= 48) return "üå´Ô∏è"
  if (code <= 65) return "üåßÔ∏è"
  if (code <= 75) return "‚ùÑÔ∏è"
  if (code <= 82) return "üåßÔ∏è"
  return "‚õàÔ∏è"
} 